<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cloud Inventory Manager</title>
  <link rel="icon" href="LOGO.png" type="image/png">
  <style>
    /* Reset styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    /* Global styles */
    body {
      background-color: #0f172a;
      color: #e2e8f0;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      min-height: 100vh;
      padding: 20px;
      text-align: center;
    }

    h1 {
      font-size: 2.5rem;
      font-weight: bold;
      color: #ffffff;
      margin-bottom: 10px;
    }

    p {
      font-size: 1rem;
      color: #94a3b8;
      margin-bottom: 30px;
    }

    /* Card container */
    .card {
      background-color: #1e293b;
      padding: 20px;
      border-radius: 12px;
      box-shadow: 0 8px 20px rgba(0, 0, 0, 0.5);
      width: 100%;
      max-width: 800px;
    }

    /* Table styling */
    table {
      width: 100%;
      border-collapse: collapse;
      margin: 20px 0;
    }

    th, td {
      padding: 15px;
      text-align: left;
    }

    th {
      background-color: #334155;
      color: #e2e8f0;
      text-transform: uppercase;
      font-size: 0.9rem;
    }

    td {
      background-color: #1e293b;
      color: #e2e8f0;
      border-bottom: 1px solid #334155;
      font-size: 0.9rem;
    }

    tr:hover {
      background-color: #475569;
    }

    /* Button styling */
    button {
      margin-top: 20px;
      padding: 15px;
      width: 60px;
      height: 60px;
      background-color: #157307;
      color: white;
      border: none;
      border-radius: 50%;
      font-size: 1.5rem;
      font-weight: bold;
      cursor: pointer;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    button:hover {
      background-color: #0ea130;
      transform: scale(1.1);
    }

    /* Mobile responsiveness */
    @media (max-width: 600px) {
      h1 {
        font-size: 2rem;
      }

      p {
        font-size: 0.9rem;
      }

      th, td {
        padding: 10px;
      }

      button {
        width: 70px;
        height: 70px;
        font-size: 2rem;
      }
    }
  </style>
</head>
<body>
  <div class="card">
    <h1>Tyler B's <br>Cloud Inventory Manager</h1>
    <p>This table is to help me keep an easier watch on the resources within my AWS Account. Use the refresh button to see updated resources.</p>
    
    <table>
      <thead>
        <tr>
          <th>Name</th>
          <th>Type</th>
          <th>Status</th>
        </tr>
      </thead>
      <tbody id="inventoryBody">
        <!-- Dynamic content will go here -->
      </tbody>
    </table>
    <button id="refreshButton">‚ü≥</button>
  </div>

  <script>
    const apiUrl = "https://mhc2vkfs17.execute-api.us-east-1.amazonaws.com/Prod";

    // Function to truncate text and add tooltip
    function truncateText(text, maxLength) {
      if (text.length > maxLength) {
        return `<span title="${text}">${text.slice(0, maxLength)}...</span>`;
      }
      return text;
    }

    // Function to populate the table with items
    function populateTable(items) {
      const tableBody = document.getElementById("inventoryBody");
      tableBody.innerHTML = ""; // Clear existing rows

      items.forEach(item => {
        const row = document.createElement("tr");

        const idCell = document.createElement("td");
        idCell.innerHTML = truncateText(item.ID, 20);
        row.appendChild(idCell);

        const typeCell = document.createElement("td");
        typeCell.textContent = item.Type;
        row.appendChild(typeCell);

        const stateCell = document.createElement("td");
        stateCell.textContent = item.State;
        row.appendChild(stateCell);

        tableBody.appendChild(row);
      });
    }

    // Fetch all inventory items
    async function fetchInventory() {
      try {
          const response = await fetch(`${apiUrl}/get-all`);
          if (!response.ok) throw new Error("Failed to fetch resources");

          const data = await response.json();
          console.log("API Response:", data);

          const items = Array.isArray(data.body) ? data.body : JSON.parse(data.body || "[]");
          populateTable(items);
      } catch (error) {
          console.error("Error fetching resources:", error);
          alert("Could not load resources. Please try again later.");
      }
    }

    document.getElementById("refreshButton").addEventListener("click", fetchInventory);
    fetchInventory();
  </script>
</body>
</html>
