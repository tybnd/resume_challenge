<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cloud Inventory Manager</title>
  <link rel="icon" href="LOGO.png" type="image/png">
  <style>
    /* Reset styles */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: Arial, sans-serif;
    }

    /* Page layout */
    body {
      background-color: #1a1a1a;
      color: #f4f4f4;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      padding: 20px;
      min-height: 100vh;
    }

    /* Centered container */
    .container {
      width: 100%;
      max-width: 800px;
      padding: 20px;
      background-color: #2c2c2c;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
    }

    h2 {
      margin-bottom: 20px;
      font-size: 2em;
      text-align: center;
      color: #00d4ff;
    }

    p {
      text-align: center;
      font-size: 1em;
      color: #d1d1d1;
      margin-bottom: 20px;
    }
    

    /* Table styling */
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
      background-color: #3c3c3c;
      color: #ffffff;
      border-radius: 8px;
      overflow: hidden;
    }

    th, td {
      padding: 15px;
      border-bottom: 1px solid #444444;
      text-align: left;
    }

    th {
      background-color: #444444;
      color: #f4f4f4;
      font-weight: bold;
    }

    td {
      color: #e4e4e4;
    }

    tr:hover {
      background-color: #555555;
    }

    /* Button styling */
    button {
      margin: 10px 0; 
      padding: 10px; 
      background-color: #00d4ff; 
      color: #fff; 
      border: none; 
      border-radius: 4px; 
      cursor: pointer;
    }

    button:hover {
      background-color: #0056b3;
    }

    /* Input styling */
    input[type="number"] {
      width: 60px;
      padding: 5px;
      border: 1px solid #555555;
      border-radius: 4px;
      text-align: center;
      background-color: #222;
      color: #fff;
    }

    /* Mobile responsiveness */
    @media (max-width: 600px) {
      .container {
        width: 100%;
        padding: 10px;
      }

      th, td {
        padding: 10px;
      }
    }
    
  </style>
  
</head>
<body>
  <div class="container">
    <h2>Tyler B's <br> Cloud Inventory Manager</h2>
    <p>This table is to help me keep a easier watch on the resources within my AWS Account. Use the refresh button to see updated resources.</p>
    
    <table id="inventoryTable">
      <thead>
        <tr>
          <th>Item</th>
          <th>Quantity</th>
          <th>Update</th>
        </tr>
      </thead>
      <tbody id="inventoryBody"></tbody>
    </table>
    <button onclick="fetchInventory()" style="margin-top: 20px; padding: 10px; background-color: #00d4ff; color: #fff; border: none; border-radius: 4px; cursor: pointer;">
      Refresh Resources
    </button>
    
  </div>

  <script>
    const apiUrl = "https://mhc2vkfs17.execute-api.us-east-1.amazonaws.com/Prod";

    // Function to populate the table with items
    function populateTable(items) {
      const tableBody = document.getElementById("inventoryBody");
      tableBody.innerHTML = ""; // Clear existing rows

      items.forEach(item => {
        const row = document.createElement("tr");

        const nameCell = document.createElement("td");
        nameCell.textContent = item.ID;
        row.appendChild(nameCell);

        const quantityCell = document.createElement("td");
        quantityCell.textContent = item.Quantity;
        row.appendChild(quantityCell);

        tableBody.appendChild(row);
      });
    }

    // Fetch all inventory items and populate the table
    async function fetchInventory() {
      try {
        const response = await fetch(`${apiUrl}/get-all`);

        if (!response.ok) throw new Error("Failed to fetch resources");

        const data = await response.json();

        // Check if the response contains the 'body' field
        if (data.body) {
          const items = Array.isArray(data.body) ? data.body : JSON.parse(data.body);
          populateTable(items); // Call the populateTable function here
        } else {
          // Handle the case where the response doesn't have a 'body' field
          console.error("Invalid response structure:", data);
          alert("Invalid response format from the server.");
        }
      } catch (error) {
        console.error("Error fetching resources:", error);
        alert("Could not load resources. Please try again later.");
      }
    }

    // Initial fetch to populate the table
    fetchInventory();

  </script>
</body>
</html>
