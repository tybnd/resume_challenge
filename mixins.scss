// Define breakpoints
$breakpoints: (
  sm: 576px,  // Small devices (mobile)
  md: 768px,  // Medium devices (tablets)
  lg: 992px,  // Large devices (desktops)
  xl: 1200px  // Extra large devices (large desktops)
);

// Mixin for media breakpoint down
@mixin media-breakpoint-down($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $max-width: map-get($breakpoints, $breakpoint);
    @media (max-width: $max-width) {
      @content;
    }
  } @else {
    @warn "No such breakpoint: #{$breakpoint}.";
  }
}

// Mixin for media breakpoint up
@mixin media-breakpoint-up($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $min-width: map-get($breakpoints, $breakpoint);
    @media (min-width: $min-width) {
      @content;
    }
  } @else {
    @warn "No such breakpoint: #{$breakpoint}.";
  }
}

// Mixin for media breakpoint only
@mixin media-breakpoint-only($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $min-width: map-get($breakpoints, $breakpoint);
    $max-width: map-get($breakpoints, nth($breakpoints, index($breakpoints, $breakpoint) + 1));
    
    @media (min-width: $min-width) and (max-width: $max-width) {
      @content;
    }
  } @else {
    @warn "No such breakpoint: #{$breakpoint}.";
  }
}

// Mixin for responsive font sizes
@mixin responsive-font($min-size, $max-size, $min-vw, $max-vw) {
  font-size: $min-size;

  @media (min-width: $min-vw) {
    font-size: calc(#{$min-size} + (#{$max-size} - #{$min-size}) * ((100vw - #{$min-vw}) / ($max-vw - $min-vw)));
  }

  @media (min-width: $max-vw) {
    font-size: $max-size;
  }
}

// Your list styles
.my-list {
  @extend %resetList; // Extend the resetList placeholder
  // Additional styles for the list
  padding-left: 20px; // Add custom padding if needed
}

// Define a placeholder for resetting list styles
%resetList {
  list-style: none;  // Remove default list styles
  padding: 0;        // Remove default padding
  margin: 0;         // Remove default margin
}



